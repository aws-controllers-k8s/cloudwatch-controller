// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MetricStreamSpec defines the desired state of MetricStream.
type MetricStreamSpec struct {

	// If you specify this parameter, the stream sends metrics from all metric namespaces
	// except for the namespaces that you specify here.
	//
	// You cannot include ExcludeFilters and IncludeFilters in the same operation.
	ExcludeFilters []*MetricStreamFilter `json:"excludeFilters,omitempty"`
	// The ARN of the Amazon Kinesis Data Firehose delivery stream to use for this
	// metric stream. This Amazon Kinesis Data Firehose delivery stream must already
	// exist and must be in the same account as the metric stream.
	// +kubebuilder:validation:Required
	FirehoseARN *string `json:"firehoseARN"`
	// If you specify this parameter, the stream sends only the metrics from the
	// metric namespaces that you specify here.
	//
	// You cannot include IncludeFilters and ExcludeFilters in the same operation.
	IncludeFilters []*MetricStreamFilter `json:"includeFilters,omitempty"`
	// If you are creating a metric stream in a monitoring account, specify true
	// to include metrics from source accounts in the metric stream.
	IncludeLinkedAccountsMetrics *bool `json:"includeLinkedAccountsMetrics,omitempty"`
	// If you are creating a new metric stream, this is the name for the new stream.
	// The name must be different than the names of other metric streams in this
	// account and Region.
	//
	// If you are updating a metric stream, specify the name of that stream here.
	//
	// Valid characters are A-Z, a-z, 0-9, "-" and "_".
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// The output format for the stream. Valid values are json, opentelemetry1.0,
	// and opentelemetry0.7. For more information about metric stream output formats,
	// see Metric streams output formats (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
	// +kubebuilder:validation:Required
	OutputFormat *string `json:"outputFormat"`
	// The ARN of an IAM role that this metric stream will use to access Amazon
	// Kinesis Data Firehose resources. This IAM role must already exist and must
	// be in the same account as the metric stream. This IAM role must include the
	// following permissions:
	//
	//   - firehose:PutRecord
	//
	//   - firehose:PutRecordBatch
	//
	// +kubebuilder:validation:Required
	RoleARN *string `json:"roleARN"`
	// By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT
	// statistics for each metric that is streamed. You can use this parameter to
	// have the metric stream also send additional statistics in the stream. This
	// array can have up to 100 members.
	//
	// For each entry in this array, you specify one or more metrics and the list
	// of additional statistics to stream for those metrics. The additional statistics
	// that you can stream depend on the stream's OutputFormat. If the OutputFormat
	// is json, you can stream any additional statistic that is supported by CloudWatch,
	// listed in CloudWatch statistics definitions (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html).
	// If the OutputFormat is opentelemetry1.0 or opentelemetry0.7, you can stream
	// percentile statistics such as p95, p99.9, and so on.
	StatisticsConfigurations []*MetricStreamStatisticsConfiguration `json:"statisticsConfigurations,omitempty"`
	// A list of key-value pairs to associate with the metric stream. You can associate
	// as many as 50 tags with a metric stream.
	//
	// Tags can help you organize and categorize your resources. You can also use
	// them to scope user permissions by granting a user permission to access or
	// change only resources with certain tag values.
	//
	// You can use this parameter only when you are creating a new metric stream.
	// If you are using this operation to update an existing metric stream, any
	// tags you specify in this parameter are ignored. To change the tags of an
	// existing metric stream, use TagResource (https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html)
	// or UntagResource (https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_UntagResource.html).
	Tags []*Tag `json:"tags,omitempty"`
}

// MetricStreamStatus defines the observed state of MetricStream
type MetricStreamStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
}

// MetricStream is the Schema for the MetricStreams API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type MetricStream struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MetricStreamSpec   `json:"spec,omitempty"`
	Status            MetricStreamStatus `json:"status,omitempty"`
}

// MetricStreamList contains a list of MetricStream
// +kubebuilder:object:root=true
type MetricStreamList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MetricStream `json:"items"`
}

func init() {
	SchemeBuilder.Register(&MetricStream{}, &MetricStreamList{})
}
